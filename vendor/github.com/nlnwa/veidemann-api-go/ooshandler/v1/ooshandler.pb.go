// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ooshandler/v1/ooshandler.proto

package ooshandler

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	v1 "github.com/nlnwa/veidemann-api-go/frontier/v1"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SubmitUriRequest struct {
	Uri                  *v1.QueuedUri `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SubmitUriRequest) Reset()         { *m = SubmitUriRequest{} }
func (m *SubmitUriRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitUriRequest) ProtoMessage()    {}
func (*SubmitUriRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8c7db1dff5c0a2a, []int{0}
}

func (m *SubmitUriRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitUriRequest.Unmarshal(m, b)
}
func (m *SubmitUriRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitUriRequest.Marshal(b, m, deterministic)
}
func (m *SubmitUriRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitUriRequest.Merge(m, src)
}
func (m *SubmitUriRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitUriRequest.Size(m)
}
func (m *SubmitUriRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitUriRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitUriRequest proto.InternalMessageInfo

func (m *SubmitUriRequest) GetUri() *v1.QueuedUri {
	if m != nil {
		return m.Uri
	}
	return nil
}

func init() {
	proto.RegisterType((*SubmitUriRequest)(nil), "veidemann.api.frontier.v1.SubmitUriRequest")
}

func init() { proto.RegisterFile("ooshandler/v1/ooshandler.proto", fileDescriptor_c8c7db1dff5c0a2a) }

var fileDescriptor_c8c7db1dff5c0a2a = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xcf, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x0d, 0x82, 0xe0, 0x7a, 0xd1, 0x1c, 0x44, 0x53, 0x10, 0x29, 0x0a, 0x82, 0x74, 0x96,
	0x54, 0xf0, 0xa0, 0xb7, 0x82, 0x20, 0x5e, 0xd4, 0x16, 0x2f, 0x9e, 0xdc, 0x24, 0xd3, 0x74, 0x21,
	0x99, 0x89, 0xfb, 0x4b, 0xfd, 0xef, 0x25, 0x0d, 0x6d, 0xb4, 0xa0, 0xc7, 0xc7, 0xf2, 0xbe, 0xf7,
	0xb1, 0x23, 0x4e, 0x98, 0xed, 0x42, 0x51, 0x51, 0xa1, 0x91, 0x21, 0x95, 0x7d, 0x82, 0xc6, 0xb0,
	0xe3, 0xf8, 0x38, 0xa0, 0x2e, 0xb0, 0x56, 0x44, 0xa0, 0x1a, 0x0d, 0x73, 0xc3, 0xe4, 0x34, 0x1a,
	0x08, 0x69, 0x32, 0x58, 0x85, 0xb6, 0x68, 0xd0, 0xb2, 0x37, 0x39, 0xda, 0xae, 0x97, 0x0c, 0x4a,
	0xe6, 0xb2, 0x42, 0xb9, 0x4c, 0x99, 0x9f, 0x4b, 0xac, 0x1b, 0xf7, 0xd5, 0x3d, 0x0e, 0x1f, 0xc4,
	0xfe, 0xcc, 0x67, 0xb5, 0x76, 0x2f, 0x46, 0x4f, 0xf1, 0xdd, 0xa3, 0x75, 0xf1, 0xb5, 0xd8, 0xf6,
	0x46, 0x1f, 0x45, 0xa7, 0xd1, 0xc5, 0xde, 0xf8, 0x0c, 0xfe, 0x9c, 0x85, 0x67, 0x8f, 0x1e, 0x8b,
	0xb6, 0xd9, 0x16, 0xc6, 0x6f, 0x42, 0x3c, 0xb2, 0xbd, 0xef, 0xa4, 0xe3, 0xa9, 0xd8, 0x5d, 0x93,
	0xe3, 0xcb, 0x7f, 0x28, 0x9b, 0xfb, 0xc9, 0x21, 0x74, 0xc6, 0xb0, 0x32, 0x86, 0xbb, 0xd6, 0x78,
	0xb8, 0x35, 0xf9, 0x14, 0xe7, 0xc4, 0x40, 0x19, 0x10, 0xa9, 0x0d, 0xe2, 0x8f, 0xef, 0x0a, 0xe9,
	0xe4, 0xa0, 0x17, 0x99, 0xa1, 0x09, 0x3a, 0xc7, 0xa7, 0xe8, 0xf5, 0xa6, 0xd4, 0x6e, 0xe1, 0x33,
	0xc8, 0xb9, 0x96, 0x54, 0xd1, 0x87, 0x92, 0x6b, 0xc4, 0x48, 0x35, 0x7a, 0x54, 0xb2, 0xfc, 0x75,
	0x82, 0xdb, 0x3e, 0x65, 0x3b, 0x4b, 0x97, 0xab, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xba, 0x3f,
	0x0e, 0xde, 0xa5, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OosHandlerClient is the client API for OosHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OosHandlerClient interface {
	SubmitUri(ctx context.Context, in *SubmitUriRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type oosHandlerClient struct {
	cc *grpc.ClientConn
}

func NewOosHandlerClient(cc *grpc.ClientConn) OosHandlerClient {
	return &oosHandlerClient{cc}
}

func (c *oosHandlerClient) SubmitUri(ctx context.Context, in *SubmitUriRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/veidemann.api.frontier.v1.OosHandler/SubmitUri", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OosHandlerServer is the server API for OosHandler service.
type OosHandlerServer interface {
	SubmitUri(context.Context, *SubmitUriRequest) (*empty.Empty, error)
}

func RegisterOosHandlerServer(s *grpc.Server, srv OosHandlerServer) {
	s.RegisterService(&_OosHandler_serviceDesc, srv)
}

func _OosHandler_SubmitUri_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitUriRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OosHandlerServer).SubmitUri(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/veidemann.api.frontier.v1.OosHandler/SubmitUri",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OosHandlerServer).SubmitUri(ctx, req.(*SubmitUriRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OosHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "veidemann.api.frontier.v1.OosHandler",
	HandlerType: (*OosHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitUri",
			Handler:    _OosHandler_SubmitUri_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ooshandler/v1/ooshandler.proto",
}
